---
name: ðŸ§ª Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CLICOLOR_FORCE: 'true'

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test --all-features

  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt,clippy
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features

  build:
    name: cargo build
    needs: [test, formatting]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run Clippy
        run: cargo build --release
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: target/release/raytrace
          retention-days: 3

  render:
    name: render ${{ matrix.config }}
    needs: [build]
    strategy:
      matrix:
        config:
          - basic
          - bouncing_spheres
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: target/release
      - run: chmod +x ./target/release/raytrace
      - env:
          CONFIG: ${{ matrix.config }}
        run: ./target/release/raytrace --config "examples/$CONFIG/render.toml" --output render.png
      - uses: actions/upload-artifact@v4
        with:
            name: ${{ matrix.config }}-render
            path: render.png
            retention-days: 3
